{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"NiceGUI \u6559\u7a0b","text":"ref.py<pre><code>class Ref:\n    def __init__(self, **kwargs):\n        self._subject = Subject()\n        self._dict = {}\n\n        for k, v in kwargs.items():\n            self.set_value(k, v)\n\n    def __getattr__(self, key):\n        # \u5141\u8bb8\u901a\u8fc7 a.key \u8bbf\u95ee\u5c5e\u6027\u503c\n        if key in self._dict:\n            return self.get_value(key)\n\n        raise AttributeError(f\"No attribute named '{key}' exists.\")\n\n    def __setattr__(self, key, value):\n        # \u5141\u8bb8\u901a\u8fc7 a.key = value \u8bbe\u7f6e\u5c5e\u6027\u503c\n        if key.startswith(\"_\"):  # \u5904\u7406\u79c1\u6709\u5c5e\u6027\n            super().__setattr__(key, value)\n        else:\n            self.set_value(key, value)\n\n    def __str__(self):\n        return f\"{self.__class__.__name__}(\" + \", \".join(f\"{k}={v}\" for k, v in self._dict.items()) + \")\"\n\n    def set_value(self, key, value):\n        old_value = self._dict.get(key)\n        self._dict[key] = value\n\n        if old_value != value:\n            self._subject.on_next((key, old_value, value))\n\n    def update_from_dict(self, d: dict):\n        for k, v in d.items():\n            self.set_value(k, v)\n\n    def get_value(self, key):\n        return self._dict.get(key)\n\n    def remove(self, key):\n        if key in self._dict:\n            old_value = self._dict.pop(key)\n            self._subject.on_next((key, old_value, None))\n\n    def get_keys(self):\n        return self._dict.keys()\n\n    def subscribe(self, on_next):\n        return self._subject.subscribe(on_next)\n</code></pre> button.py<pre><code>from nicegui import ui\nfrom ref import Ref\nfrom typing import Any\n\n\nclass Button(ui.button):\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.ref = None\n\n    def bind_ref(self, ref: Ref):\n        if isinstance(ref, Ref):\n            self.ref = ref\n            self.ref.subscribe(self.bind_prop)\n\n            for k, v in self.ref._dict.items():\n                self.props(f\"{k}={v}\")\n\n        return self\n\n    def bind_prop(self, *args):\n        for k, ov, nv in args:\n            if k == \"text\":\n                self._props[\"label\"] = nv\n            else:\n                self._props[k] = nv\n\n            self.update()\n\n        return self\n\n\n@ui.page(\"/\")\ndef index():\n    btn_ref = Ref(text=\"amy\", icon=\"list\")\n    btn = Button(\n        text=\"abc\",\n        on_click=lambda: (btn_ref.update_from_dict({\"size\": \"lg\", \"color\": \"red\", \"icon\": \"home\"}), print(btn_ref))\n    ).bind_ref(btn_ref)\n\n    btn2 = ui.button(on_click=lambda: btn_ref.set_value(\"text\", \"two\"))\n\n\nui.run()\n</code></pre>"},{"location":"blog/","title":"Blog","text":""},{"location":"examples/","title":"NiceGUI \u6848\u4f8b","text":""},{"location":"examples/authentication/","title":"\u7528\u6237\u9a8c\u8bc1","text":"<p>NiceGUI \u5b98\u65b9\u6587\u6863\u4e0a\u7ed9\u51fa\u4e86\u4e00\u4e2a\u7528\u6237\u767b\u5f55\u9a8c\u8bc1\u7684\u7b80\u5355\u793a\u4f8b\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5256\u6790\u4e00\u4e0b\u6e90\u7801\uff0c\u5e76\u5728\u539f\u6709\u57fa\u7840\u4e0a\u505a\u4e00\u4e0b\u5b8c\u5584\u3002</p> <p>\u5207\u52ff\u5e94\u7528\u4e8e\u751f\u4ea7\u73af\u5883</p> <p>\u8be5\u793a\u4f8b\u4e3a\u975e\u5e38\u7b80\u5355\u7684\u7528\u6237\u767b\u5f55\u9a8c\u8bc1\u64cd\u4f5c\uff0c\u5b9e\u9645\u751f\u4ea7\u73af\u5883\u8981\u4e1a\u52a1\u9a8c\u8bc1\u903b\u8f91\u8981\u590d\u6742\u7684\u591a\uff0c\u5efa\u8bae\u53ef\u4ee5\u53c2\u8003 FastAPI Simple-OAuth2 \u6216\u8005 Authlib\u3002</p>"},{"location":"examples/authentication/#1","title":"1. \u9a8c\u8bc1\u4e2d\u95f4\u4ef6","text":"<p>\u6211\u4eec\u80af\u5b9a\u662f\u60f3\u8981\u5728\u5f88\u591a\u8def\u7531\u4e0a\u90fd\u6dfb\u52a0\u4e0a\u7528\u6237\u767b\u5f55\u9a8c\u8bc1\u7684\u56fd\u529f\u80fd\uff08\u7c7b\u4f3c\u4e8e\u88c5\u9970\u5668\uff09\uff0c\u8fd9\u6837\u9632\u6b62\u7528\u6237\u80fd\u901a\u8fc7\u6d4f\u89c8\u5668\u8f93\u5165 URL \u5c31\u80fd\u76f4\u63a5\u8bbf\u95ee\u7684\u5177\u4f53\u9875\u9762\u5185\u5bb9\u3002\u793a\u4f8b\u901a\u8fc7\u5c01\u88c5 <code>AuthMiddleware</code> \u4e2d\u95f4\u4ef6\uff0c\u6765\u9650\u5236\u6240\u6709 NiceGUI \u6240\u6709\u9875\u9762\u5fc5\u987b\u6ee1\u8db3\u9a8c\u8bc1\u8981\u6c42\u3002</p> <pre><code>from typing import Optional, Callable\nfrom fastapi import Request\nfrom fastapi.responses import RedirectResponse\nfrom starlette.middleware.base import BaseHTTPMiddleware\nfrom nicegui import app, ui\n\n\nclass AuthMiddleware(BaseHTTPMiddleware):\n    \"\"\"\u5982\u679c\u7528\u6237\u767b\u5f55\u9a8c\u8bc1\u4e0d\u6210\u529f\uff0c\u90a3\u4e48\u76f4\u63a5\u8df3\u8f6c\u5230\u767b\u5f55\u9875\u9762\"\"\"\n\n    unrestricted_page_routes = {'/login'}\n\n    async def dispatch(self, request: Request, call_next: Callable):\n        if not app.storage.user.get('authenticated', False):\n\n            if not request.url.path.startswith('/_nicegui') and \n                request.url.path not in self.unrestricted_page_routes:\n                # \u5b58\u50a8\u7528\u6237\u771f\u6b63\u60f3\u8981\u8bbf\u95ee\u7684 URL \u4fe1\u606f\n                app.storage.user['referrer_path'] = request.url.path\n                return RedirectResponse('/login')\n\n        return await call_next(request)\n\n\napp.add_middleware(AuthMiddleware)\n</code></pre>"},{"location":"examples/authentication/#2","title":"2. \u767b\u5f55\u9a8c\u8bc1\u9875","text":"<pre><code>userinfo = [\n    {\"name\": \"admin\", \"mail\": \"\", \"password\": \"admin\", \"role\": \"admin\", \"dept\": \"\"}\n]  # (1)!\n\n\n@ui.page('/login')\ndef login() -&gt; Optional[RedirectResponse]:\n    def _try_login():  # local function to avoid passing username and password as arguments\n        if passwords.get(username.value) == password.value:\n            app.storage.user.update({'username': username.value, 'authenticated': True})\n            ui.navigate.to(app.storage.user.get('referrer_path', '/'))  # go back to where the user wanted to go\n        else:\n            ui.notify(\"\u7528\u6237\u6216\u5bc6\u7801\u9519\u8bef\uff01\", color='negative')\n\n    if app.storage.user.get('authenticated', False):\n        return RedirectResponse('/')\n\n    with ui.card().classes('absolute-center'):\n        username = ui.input('\u8d26\u53f7\u6216\u90ae\u7bb1').on('keydown.enter', try_login)\n        password = ui.input('\u5bc6\u7801', password=True, password_toggle_button=True).on('keydown.enter', _try_login)\n        ui.button('\u767b\u5f55', on_click=try_login)\n\n    return None\n</code></pre> <pre><code>1. \u8fd9\u91cc\u6211\u4eec\u5c06\u7528\u6237\u4fe1\u606f\u4ee5\u5b57\u5178\u7684\u65b9\u5f0f\u76f4\u63a5\u5199\u6b7b\uff0c\u5b9e\u9645\u4e1a\u52a1\u4e2d\u8fd8\u662f\u9700\u8981\u6839\u636e\u8f93\u5165\u8d26\u53f7\u4ee5\u53ca\u5bc6\u7801\u4fe1\u606f\u53bb\u6570\u636e\u5e93\u4e2d\u8fdb\u884c\u67e5\u8be2\uff0c\u8fd4\u56de\u9a8c\u8bc1\u7ed3\u679c\u4fe1\u606f\u3002\n</code></pre>"},{"location":"examples/tables/","title":"ui.tables \u6848\u4f8b","text":"<p>NiceGUI \u4e2d <code>ui.table</code> \u7ec4\u4ef6\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u975e\u5e38\u597d\u7684\u6570\u636e\u5c55\u793a\u5f62\u5f0f\uff0c\u4f46\u5b9e\u9645\u4e2d\u6211\u4eec\u53ef\u80fd\u5bf9\u4e8e\u6570\u636e\u5c55\u793a\u6709\u66f4\u591a\u7684\u5c55\u793a\u9700\u6c42\uff0c\u4e0b\u9762\u6211\u4eec\u5c31\u6269\u5c55\u4e00\u4e0b <code>ui.table</code> \u7684\u4f7f\u7528\u3002</p>"},{"location":"examples/tables/#1-ui","title":"1. \u4f7f\u7528 UI \u7ec4\u4ef6\u6e32\u67d3\u5355\u5143\u683c","text":""},{"location":"examples/tables/#11-uibadge","title":"1.1 \u4f7f\u7528 ui.badge \u6e32\u67d3","text":"<p>\u5728\u6e32\u67d3\u4e00\u4e9b\u8868\u683c\u6570\u636e\u65f6\uff0c\u4e3a\u4e86\u63d0\u9ad8\u9875\u9762\u7f8e\u5316\u6548\u679c\uff0c\u6211\u4eec\u5e38\u5e38\u5e0c\u671b\u5c06\u67d0\u4e9b\u5217\u6e32\u67d3\u6210\u66f4\u7a81\u51fa\u7684\u5143\u7d20\u3002NiceGUI \u5b98\u65b9\u63d0\u4f9b\u4e86\u4e00\u4e2a\u793a\u4f8b\uff0c\u4f7f\u7528 <code>ui.badge</code> \u7ec4\u4ef6\u6e32\u67d3 <code>age</code> \u5b57\u6bb5\uff0c\u5e76\u6839\u636e\u5b57\u6bb5\u503c\u5728\u989c\u8272\u4e0a\u505a\u4e0d\u540c\u7684\u7a81\u51fa\u3002</p> <p></p> \u6761\u4ef6\u683c\u5f0f\u5316<pre><code>from nicegui import ui\n\ncolumns = [\n    {'name': 'name', 'label': 'Name', 'field': 'name'},\n    {'name': 'age', 'label': 'Age', 'field': 'age'},\n]\nrows = [\n    {'name': 'Alice', 'age': 18, 'status': True},\n    {'name': 'Bob', 'age': 21, 'status': False},\n]\ntable = ui.table(columns=columns, rows=rows, row_key='name')\ntable.add_slot('body-cell-age', '''\n    &lt;q-td key=\"age\" :props=\"props\"&gt;\n        &lt;q-badge :color=\"props.value &lt; 21 ? 'red' : 'green'\"&gt;\n            {{ props.value }}\n        &lt;/q-badge&gt;\n    &lt;/q-td&gt;\n''')\nui.run()\n</code></pre>"},{"location":"examples/tables/#12-switch","title":"1.2 \u4f7f\u7528 switch \u6e32\u67d3","text":"<p>\u53c2\u7167\u6b64\u65b9\u6cd5\uff0c\u6211\u4eec\u5c1d\u8bd5\u4e0b\u5c06 <code>status</code> \u5b57\u6bb5\u901a\u8fc7 <code>ui.switch</code> \u7ec4\u4ef6\u6e32\u67d3\uff0c\u66f4\u7a81\u51fa\u7528\u6237\u7684\u6d3b\u8dc3\u72b6\u6001\u3002</p> ui.switch\u7ec4\u4ef6\u6e32\u67d3status\u5b57\u6bb5<pre><code>from nicegui import ui\n\ncolumns = [\n    {'name': 'name', 'label': 'Name', 'field': 'name'},\n    {'name': 'age', 'label': 'Age', 'field': 'age'},\n    {'name': 'status', 'label': 'Status', 'field': 'status'},\n]\nrows = [\n    {'name': 'Alice', 'age': 18, 'status': True},\n    {'name': 'Bob', 'age': 21, 'status': False},\n    {'name': 'Carol', 'age': 42, 'status': True},\n]\ntable = ui.table(columns=columns, rows=rows, row_key='name')\ntable.add_slot('body-cell-age', '''\n    &lt;q-td key=\"age\" :props=\"props\"&gt;\n        &lt;q-badge :color=\"props.value &lt; 21 ? 'red' : 'green'\"&gt;\n            {{ props.value }}\n        &lt;/q-badge&gt;\n    &lt;/q-td&gt;\n''')\ntable.add_slot('body-cell-status', '''\n    &lt;q-td key=\"status\" :props=\"props\"&gt;\n        &lt;q-switch \n            v-model=\"props.value\"\n            checked-icon=\"check\" \n            unchecked-icon=\"clear\"\n        /&gt;\n    &lt;/q-td&gt;\n''')\nui.run()\n</code></pre> <p></p> <p>\u6211\u4eec\u53d1\u73b0\u8868\u683c\u786e\u5b9e\u6b63\u5e38\u6e32\u67d3\u4e86\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u5f0f\u4e0b <code>ui.switch</code> \u7ec4\u4ef6\u5374 \u65e0\u6cd5\u70b9\u51fb\u5207\u6362\u72b6\u6001\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528 <code>v-model=\"props.row.status\"</code> \u6765\u7ed1\u5b9a\u5230\u6bcf\u884c <code>status</code> \u7684\u503c\uff0c\u5c31\u53ef\u4ee5\u6b63\u5e38\u5207\u6362\u72b6\u6001\u4e86\u3002</p> ui.switch\u7ec4\u4ef6\u6e32\u67d3status\u5b57\u6bb5<pre><code>table.add_slot('body-cell-status', '''\n    &lt;q-td key=\"status\" :props=\"props\"&gt;\n        &lt;q-switch \n            v-model=\"props.row.status\"\n            checked-icon=\"check\" \n            unchecked-icon=\"clear\"\n        /&gt;\n    &lt;/q-td&gt;\n    ''')\n</code></pre> switch\u7ec4\u4ef6\u5207\u6362\u72b6\u6001\u540e\uff0c\u540c\u6b65 <code>status</code> \u66f4\u65b0\u81f3\u6570\u636e\u5e93 <p>\u5982\u679c\u6211\u4eec\u60f3\u8981\u529f\u80fd\u66f4\u4fbf\u6377\uff0c\u90a3\u4e48\u53ef\u4ee5\u5207\u6362\u72b6\u6001\u540e\uff0c\u7acb\u9a6c\u5c06\u66f4\u6539\u540c\u6b65\u81f3\u6570\u636e\u4e2d\uff0c\u8fd9\u91cc\u53c2\u8003 NiceGUI \u5b98\u65b9\u7684\u8868\u683c\u4e0b\u62c9\u793a\u4f8b\uff0c\u7a0d\u4f5c\u6539\u52a8\u6765\u5b9e\u73b0\u6b64\u529f\u80fd\u3002</p> <pre><code>from nicegui import events, ui\n\ndef sync_status(e: events.GenericEventArguments):\n    for row in table.rows:\n        if row['id'] == e.args['id'] and row['status'] != e.args['status']:\n            # \u5c06\u6b64\u6761\u6570\u636e\u4f1a\u66f4\u65b0\u5230\u6570\u636e\u5e93\n            user_db_table.update(row)\n            row['status'] = e.args['status']\n\n    ui.notify(f'Table.rows is now: {table.rows}')\n\ncolumns = [\n    {'name': 'name', 'label': 'Name', 'field': 'name'},\n    {'name': 'age', 'label': 'Age', 'field': 'age'},\n    {'name': 'status', 'label': 'Status', 'field': 'status'},\n]\nrows = [\n    {'id': 1, 'name': 'Alice', 'age': 18, 'status': True},\n    {'id': 2, 'name': 'Bob', 'age': 21, 'status': False},\n    {'id': 3, 'name': 'Carol', 'age': 42, 'status': True},\n]\n\ntable = ui.table(columns=columns, rows=rows, row_key='name')\ntable.add_slot('body-cell-age', '''\n    &lt;q-td key=\"age\" :props=\"props\"&gt;\n        &lt;q-badge :color=\"props.value &lt; 21 ? 'red' : 'green'\"&gt;\n            {{ props.value }}\n        &lt;/q-badge&gt;\n    &lt;/q-td&gt;\n''')\n\ntable.add_slot('body-cell-status', '''\n    &lt;q-td key=\"status\" :props=\"props\"&gt;\n        &lt;q-toggle v-model=\"props.row.status\" \n            checked-icon=\"check\" unchecked-icon=\"clear\" \n            @update:model-value=\"() =&gt; $parent.$emit('sync_status', props.row)\"\n        /&gt;\n    &lt;/q-td&gt;\n    ''')\ntable.on('sync_status', sync_status)\nui.run()\n</code></pre>"},{"location":"examples/tables/#13","title":"1.3 \u7f16\u8f91\u6309\u94ae","text":"<p>\u5728\u5f88\u591a\u7528\u6237\u5217\u8868\u9875\u4e0a\uff0c\u8868\u683c\u6700\u540e\u4e00\u5217\u6709\u7f16\u8f91\u6309\u94ae\uff0c\u70b9\u51fb\u540e\u53ef\u4ee5\u51fa\u73b0\u5f39\u7a97\u6765\u66f4\u65b0\u76f8\u5173\u6570\u636e\u3002</p> <pre><code>columns.append(\n    {'name': 'edit', 'label': '\u7f16\u8f91', 'field': '', 'align': 'left'}\n)\n\n...\n\ntable.add_slot('body-cell-status', '''\n    &lt;q-td key=\"status\" :props=\"props\"&gt;\n        &lt;q-toggle v-model=\"props.row.status\"\n            checked-icon=\"check\" unchecked-icon=\"clear\"\n            @update:model-value=\"(e) =&gt; $parent.$emit('sync_status', props.row)\"\n        /&gt;\n    &lt;/q-td&gt;\n''')\n\ntable.add_slot('body-cell-edit', '''\n    &lt;q-td key=\"edit\" :props=\"props\"&gt;\n        &lt;q-btn icon=\"edit\" flat dense color=\"primary\" size=\"sm\"/&gt;\n    &lt;/q-td&gt;\n    ''')\n</code></pre>"},{"location":"examples/tables/#14","title":"1.4 \u6839\u636e\u5217\u540d\u8fdb\u884c\u6761\u4ef6\u6e32\u67d3","text":"<p>\u4e00\u79cd\u60c5\u51b5\u662f\uff0c\u6211\u4eec\u9700\u8981 <code>add_slot</code> \u4e2d\u904d\u5386\u6240\u6709\u5217\uff0c\u5e76\u4e14\u9700\u8981\u5224\u65ad\u5f53\u5217\u540d\u5728\u4e0d\u540c\u6761\u4ef6\u4e0b\uff0c\u4f7f\u7528\u4e0d\u540c\u7ec4\u4ef6\u8fdb\u884c\u6e32\u67d3\u3002</p> <pre><code>table.add_slot('body', '''\n    &lt;q-tr :props=\"props\"&gt;\n        &lt;q-td v-for=\"col in props.cols\" :key=\"col.name\" :props=\"props\"&gt;\n            &lt;template v-if=\"col.name === 'status'\"&gt;\n                &lt;q-toggle v-model=\"props.row.status\"\n                    checked-icon=\"check\" unchecked-icon=\"clear\"\n                    @update:model-value=\"(e) =&gt; $parent.$emit('sync_status', props.row)\"\n                /&gt;\n            &lt;/template&gt;\n            &lt;template v-else&gt;\n                {{ col.value }}\n            &lt;/template&gt;\n        &lt;/q-td&gt;\n        &lt;q-td auto-width&gt;\n            &lt;q-btn size=\"sm\" color=\"accent\" round dense flat\n                icon=\"edit\" /&gt;\n        &lt;/q-td&gt;\n    &lt;/q-tr&gt;\n''')![alt text](image.png)\n</code></pre> <p>\u5efa\u8bae</p> <p>\u8fd9\u79cd\u65b9\u6cd5\u95ee\u9898\u5728\u4e8e <code>table</code> \u5f00\u542f\u7684\u9009\u62e9\u6846\u4f1a\u88ab\u8986\u76d6\u6389\uff0c\u5bfc\u81f4\u5b57\u6bb5\u503c\u9519\u4f4d\uff0c\u9700\u8981\u6211\u4eec\u91cd\u65b0\u5b9a\u4e49\u591a\u9009\u6846\uff0c\u5904\u7406\u4e0a\u6bd4\u8f83\u9ebb\u70e6\u3002\u5efa\u8bae\u91c7\u7528 <code>table.add_slot('body-cell-[name]', ...)</code> \u65b9\u5f0f\u6765\u6e32\u67d3\u3002</p>"},{"location":"examples/tables/#2","title":"2. \u6dfb\u52a0\u641c\u7d22\u6846","text":""},{"location":"examples/tables/#3","title":"3. \u6dfb\u52a0\u6570\u636e","text":""},{"location":"examples/tables/#4","title":"4. \u5220\u9664\u6570\u636e","text":""},{"location":"examples/tables/#5","title":"5. \u51bb\u7ed3\u7a97\u53e3","text":""},{"location":"pages/login/","title":"\u767b\u5f55\u9875\u9762","text":"<p>\u4e00\u822c\u767b\u5f55\u9875\u5c5e\u4e8e\u5355\u72ec\u7684\u9875\u9762\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5355\u72ec\u642d\u5efa\u4e00\u4e2a</p>"}]}